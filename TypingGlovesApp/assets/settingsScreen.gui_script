local transitions = require "monarch.transitions.gui"
local gooey = require "gooey.gooey"

local prev_press_btn_node = nil

function init(self)
    msg.post(".", "acquire_input_focus")
    self.transition = transitions.create(gui.get_node('root'))
    .show_in(transitions.slide_in_right, gui.EASING_OUTCUBIC, 2, 0.1)
    .back_out(transitions.slide_out_right, gui.EASING_INCUBIC, 1, 0)

    prev_press_btn_node = gui.get_node('btn_base')
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
  self.transition.handle(message_id, message, sender)
end



function disable_prev_button(info)
  gui.animate(prev_press_btn_node, 'position.x', 140, gui.EASING_OUTCUBIC, 0.3)
  gui.animate(prev_press_btn_node, 'color', vmath.vector4(77,77,77,255)/255, gui.EASING_OUTCUBIC, 0.3)
  prev_press_btn_node = info.node
  gui.animate(prev_press_btn_node, 'position.x', 204, gui.EASING_OUTCUBIC, 0.3)
  gui.animate(prev_press_btn_node, 'color', vmath.vector4(0,0,255,255)/255, gui.EASING_OUTCUBIC, 0.3)
end

function on_input(self, action_id, action)
  gooey.button('btn_back', action_id, action, function() msg.post('mainScreen:/script#gameScript', 'BACK_STD_SCREEN') end)

  gooey.button('btn_base', action_id, action, function(info) disable_prev_button(info) gui.play_flipbook(gui.get_node('body'), 'screen_1') end)
  gooey.button('btn_colors', action_id, action, function(info) disable_prev_button(info) gui.play_flipbook(gui.get_node('body'), 'screen_2') end)
  gooey.button('btn_manual', action_id, action, function(info) disable_prev_button(info) gui.play_flipbook(gui.get_node('body'), 'screen_3') end)
  gooey.button('btn_about', action_id, action, function(info) disable_prev_button(info) gui.play_flipbook(gui.get_node('body'), 'screen_4') end)
end

function on_reload(self)
end
